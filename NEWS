===============   ------------
LitJSON 0.5.0.2 | 2011-11-09
===============   ------------

New features and improvements:

* Nullable<> types are transparently mapped.

* All numeric types are automatically converted in C# type conversion
  and JSON mapping; exceptions should be thrown if the target type
  can't represent the value.

* JsonData now has IsNumber property to cover all three numeric types.

* If mapping expects a dictionary and finds something else, the
  exception says what it found.


===============   ------------
LitJSON 0.5.0.1 | 2011-11-09
===============   ------------

New features and improvements:

* Support mapping JsonData[] (JsonData lists)
   -- Joe Osborn <joe@universalhappymaker.com>

* Visual Studio project files
   -- Tore <tore@vostopia.com>:

Bug fixes, all from Tore <tore@vostopia.com>:

* Properly read nested arrays; do not end all arrays when the first
  "]" is found

* Map null object <-> JSON "null"

* Parse numbers in invariant culture.


=============   ----------
LitJSON 0.5.0 | 2007-10-04
=============   ----------

New features and improvements:

* The JsonRader class now has two properties to control the reading of data
  from an input stream: EndOfInput and EndOfJson. The latter becomes
  true whenever a complete piece of JSON text has been read, while the
  former is a flag that becomes true when the stream itself reaches the end.
  This way, reading multiple JSON texts from the same input stream is
  straightforward.

* Added new base importers in JsonMapper for reading numeric values
  correctly into float and double members.

* Now Enum's can be imported/exported as numeric values.

* JsonData implements the IEquatable<T> interface now.


API changes:

  The following types are new:
    enum JsonType

  The following methods are new:
    IJsonWrapper.GetJsonType()
    IJsonWrapper.SetJsonType()

  The following properties are new:
    JsonReader.EndOfInput


Bug fixes:

* Correctly import/export properties that are read-only or write-only.

* Correctly convert null values when adding them as array elements or
  properties to a JsonData instance.

* Fixed conversion of empty JSON objects and arrays.


Thanks to all the contributors that reported problems and suggested fixes
for this release:
  Colin Alworth
  Ralf Callenberg
  andi


=============   ----------
LitJSON 0.3.0 | 2007-08-15
=============   ----------

New features and improvements:

* Exporters and importers.
  Custom conversions using the JsonMapper class can be made through
  importers and exporters. These are delegates that tell the library how to
  perform conversions between non-basic types (i.e. not string, int, long,
  double or boolean) and JSON. There are base and custom
  exporters/importers. The base exporters and importers are built-in
  delegates that currently handle simple conversions between JSON and the
  following value types:

    byte
    char
    DateTime
    decimal
    sbyte
    short
    ushort
    uint
    ulong
  
  Custom exporters and importers can be defined through
  JsonMapper.RegisterExporter and JsonMapper.RegisterImporter, and they
  override the built-in conversions.

* Improved performance of JsonMapper.ToJson()
  A static JsonWriter is re-used to reduce the activity in the heap,
  improving performance for multiple conversions.

* Allowing extended grammar
  The lexer can now accept single-quoted strings, and comments in the
  following forms:

    // Single-line comment

    /*
     * Multi-line comment
     */

  This way, certain forms of input coming from JavaScript that don't
  necessarily conform to the strict JSON grammar are allowed and succesfully
  parsed.

  A JsonReader can be configured to accept only the strict grammar or the
  extended one. These extensions are allowed by default.

* API cleanups and additions.
  The following members are new:

    JsonData.Count
    JsonMapper.RegisterExporter()
    JsonMapper.RegisterImporter()
    JsonMapper.UnregisterExporters()
    JsonMapper.UnregisterImporters()
    JsonReader.AllowComments
    JsonReader.AllowSingleQuotedStrings
    JsonWriter.Reset()

  The following overloads have been added:

    JsonMapper.ToJson(object obj, JsonWriter writer)
    JsonMapper.ToObject(JsonReader reader)

  The following members have been renamed:

    JsonReader.HasReachedEnd is now JsonReader.EndOfJson


Bugs fixed:

* JsonMapper.ToJson() avoids entering an infinite recursion by defining a
  max nesting depth.
* The JsonData int indexer now behaves correctly both when it acts as an
  array and as an object.


=============   ----------
LitJSON 0.1.0 | 2007-08-09
=============   ----------

First release.
