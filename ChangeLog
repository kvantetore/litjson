2012-03-15  Chip Salzenberg  <chip@pobox.com>

	* NEWS:
	  Update version to 0.5.0.2 (forked)
	  Backfill with info about 0.5.0.1 as well

	* JsonMapper.cs: Support mapping Nullable<>.  Support mapping all
	obvious numeric conversions among integers and among reals.
	* JSonDatac.cs: Add "IsNumber" property.  Automatically perform
	any lossless numeric conversion when type casting.  Improve error
	messages when expecting an IDictionary.

2011-11-09  Chip Salzenberg  <chip@pobox.com>

	Version 0.5.0.1 (forked)

	From Joe Osborn <joe@universalhappymaker.com>:
	* JsonMapper.cs: Support mapping JsonData[] (JsonData lists)

	From Tore <tore@vostopia.com>:
	* JsonMapper.cs: Properly read nested arrays; do not end all
	arrays when the first "]" is found
	* JsonData.cs: Write null objects as JSON "null"
	* JsonReader.cs: Parse numbers in invariant culture.
	* LitJson.sln etc: Visual Studio project files

2007-10-04  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* Makefile.am:
	  Distribute HACKING file. Simplified a little the logic behind -bin
	  releases.

	* README.bin:
	  Keep a separate README for the -bin releases.

2007-10-04  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* configure.ac:
	* NEWS:
	  Updated version to 0.5.0.

2007-10-04  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/IJsonWrapper.cs:
	  Made the JsonType enum public. Added GetJsonType() and SetJsonType()
	  methods.

	* src/LitJson/JsonData.cs:
	  Adjusted the class to the IJsonWrapper changes.

	* src/LitJson/JsonMapper.cs:
	  Fix conversion of empty objects and arrays to in ToObject(). As
	  reported and discussed with Colin Alworth.

	* test/JsonMapperTest.cs:
	  Added new coverage for conversions back and forth from empty JSON
	  objects.

2007-10-04  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonData.cs:
	  Fix conversion of null values in JSON format back to objects. Bug
	  #1807477.
	* test/JsonMapperTest.cs:
	  Added test coverage to the conversion of null values from/to objects,
	  based on the bug report made by andi.

2007-09-20  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonMapper.cs:
	  Fix importing/exporting properties that are read-only or write-only,
	  as reported by Ralf Callenberg.
	* test/JsonMapperTest.cs:
	  Added tests to cover handling of read-only and write-only properties.

2007-09-20  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* test/JsonReaderTest.cs:
	* test/Makefile.am:
	  Skip long test for now since mono 1.2.5 has a problem in
	  Int32.TryParse which affects this library.

2007-09-08  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* test/JsonMapperTest.cs:
	  Added tests for reading multiple JSON texts from the same input.

2007-09-08  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonData.cs:
	  Implement the IEquatable<T> interface in JsonData.
	* test/JsonDataTest.cs:
	  Added tests for JsonData.Equals().

2007-09-07  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonMapper.cs:
	  Added logic to read/write Enum's.
	* test/JsonMapperTest.cs:
	  Added test for enum fields.

2007-09-07  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonMapper.cs:
	  Added base importers for loading int values into double and float
	  variables.
	* test/JsonMapperTest.cs:
	  Added test for new importers.

2007-09-06  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonReader.cs:
	  Added EndOfInput property to JsonReader, with different semantics than
	  EndOFJson. This way, JsonReader can parse several pieces of JSON text
	  from the same input.
	* test/JsonReaderTest.cs:
	  Added test for the new behaviour of EndOfJson, and EndOfInput.

2007-09-04  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* AUTHORS:
	* HACKING: Added short note about credits of contributions.

2007-08-15  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonWriter.cs: Clear the stack instead of creating a new
	stack in Reset().

2007-08-15  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	=== Release 0.3.0 ===

2007-08-14  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonMapper.cs: Added Importers functionality, similar to
	the way exporters work.
	* test/JsonMapperTest.cs: Added tests for the importers.

2007-08-14  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonWriter.cs: Added Write(ulong number) overload.

	* src/LitJson/JsonMapper.cs: Added Exporters functionality. Base
	exporters are implemented to convert basic Value types such as byte,
	char, DateTime, etc. to JSON. Custom exporters can be added through
	JsonMapper.RegisterExporter(). Also, ToJson() now throws an exception if
	a certain nesting limit is reached to avoid infinite loops.

	* test/JsonMapperTest.cs: Added new tests for the exporters feature.

2007-08-14  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonWriter.cs: Added Reset() method to make it possible to
	re-use a JsonWriter instance.
	* src/LitJson/JsonMapper.cs: When performing the default ToJson()
	operation, use a static instance of JsonWriter, improving performance
	for multiple object->JSON conversions.
	* test/JsonMapperTest.cs: Added use of JsonWriter.Reset().

2007-08-14  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonData.cs: Added public Count property. Fix int indexer
	logic to work both when it's an array and an object.
	* src/LitJson/JsonMapper.cs: Added two new methods, ToJson(object,
	JsonWriter) and ToObject(JsonReader), so the mapping can be customized
	through JsonWriter and JsonReader objects.
	* test/JsonMapperTest.cs: Added new tests for the new JsonMapper
	methods.

2007-08-13  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonReader.cs:
	* src/LitJson/Lexer.cs: Extended the lexer to allow comments as well.
	* test/JsonReaderTest.cs: Added tests for reading JSON with comments on
	them.
	* doc/manual/sources/entities/urls.ent:
	* doc/manual/sources/appendices/parser/parser.xml: Added details about
	these recent extensions to the lexer in the manual.

2007-08-13  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonReader.cs:
	* src/LitJson/Lexer.cs: Added property to indicate whether single-quoted
	strings are allowed or not. This parameter is true by default.
	* test/JsonReaderTest.cs: Added test for single-quoted strings.
	* doc/manual/sources/appendices/parser/parser.xml: Simplify lexer table
	and include the new behaviour regarding single-quoted strings.

2007-08-12  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/JsonWriter.cs: Renamed private method Check() to
	DoValidation().
	* src/LitJson/Lexer.cs: Whitespace cleanups. Renamed HasReachedEnd to
	EndOfInput.
	* test/JsonReaderTest.cs:
	* src/LitJson/JsonReader.cs: Renamed HasReachedEnd to EndOfJson.
	* test/Makefile.am: Added LitJson.dll as a dependency to the Tests
	assembly.

2007-08-11  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* inc-assembly.make:
	* src/LitJson/Makefile.am:
	Don't build the Tests assembly unless 'make check' is run.

2007-08-11  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	* src/LitJson/AssemblyInfo.cs.in: Added CLSCompliant attribute.
	* doc/manual/Makefile.am: Added rule to avoid breaking compilation if
	the support docbook files are not available.

2007-08-09  Leonardo Boshell  <leonardoboshell@users.sourceforge.net>

	=== Release 0.1.0 ===
